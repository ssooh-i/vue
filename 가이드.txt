(1) 디렉티브 : 소스코드 중심으로 학습 필요
     - watch: 비동기 방식에서 시간이 오래 걸려도 작업이 수행가능하도록 하는 속성
   - v-cloak: Vue인스턴스가 생성되면 사라진다
     - v-model: 양방향 바인딩 (단, lazy(v-model:lazy)는 v-model 입력이 다 끝나고 모델에 바인딩)
     -  v-bind
   - v-for
   - v-on
   - v-while (while은 없다)
(2) 컴포넌트: 컴포넌트 사이의 통신, 라이프사이클

     - $emit / props 용어 설명이나 소스코드빈칸

   - 라이프사이클 // 1-2-4-5-3 순으로 출력
            beforeCreate() {   --1
                console.log('beforeCreate!!!');
            },
            created() {        --2
                console.log('created!!!');
            },
	destroyed() {      --3
                console.log('destroyed!!!');
            },
            mounted() {        --4
                console.log('mounted!!!');
            },
            updated() {        --5
                console.log('updated!!!');
            }
(3) Vue 환경설정파일, 특징
    - Vus에서 프로젝트를 생성하면 환경을 설정할수 있는 파일: package.json
    - 디자인 패턴을 확용한 마크업 언어나 GUI코드로 나눈 패턴: MVVM(model-view-viewModel)
(4) 비동기 통신(axsio)
   - then: 응답이 정상처리되면 
   - catch: 예외가 발생하면
(5) Vue 인스턴스
   - 뷰 인스턴스 속성의 종류: components, router, template, data
   - 뷰 인스턴스의 유효범위를 벗어나면 '무스터치{{ }}'가 그대로 출력된다.
   (ex)
    <div id="app>
       {{msg}}   <--- hello
    <div>
       {{msg}}   <--- {{msg}}
(6) 라우터
    - <router-link>: 해당 화면 연결
    - <router-view>: 화면에 출력
(7) 이벤트
      - @submit:prevent: 
      기존 동기방식의 데이터 전송을 막고 화면 변경없이 데이터 전송하는 이벤트로
          javascript의 preventDefault()에 해당  
(8) SFC 3가지 구성요소와 설명
    - <template>: html과 데이터 출력
    - <script>: data, methods등 View코드를 선언하는 자바스크립트
    - <style>: css디자인 
(9) 크로스 도메인 지원 : CORS
(10) 코드를 지원하지 않는 브라우저도 동작할수 있도록 하위버전인 ES6코드로 바꿔주는 도구: babel
